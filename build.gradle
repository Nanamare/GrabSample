// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {

        compileSdkVersion = 29
        minSdkVersion = 21
        targetSdkVersion = 29

        androidGradleVersion = '4.0.0'
        kotlinVersion = '1.3.61'

        expreesoVersion = '3.2.0'

        constraintLayoutVersion = '1.1.3'
        aacLifecycleVersion = '1.1.1'
        rxAndroidVersion = '2.1.0'
        rxJavaVersion = '2.1.3'
        okhttpVersion = '3.9.1'
        retrofitVersion = '2.3.0'
        koinAndroidVersion = '2.1.5'
        gsonVersion = '2.8.2'

        glideVersion = '4.8.0'

        securePreferenceVersion = '0.1.4'

        lottieVersion = '3.4.0'

        tedPermissionVersion = '2.2.3'

        rxBindingVersion = '3.1.0'

        googleMapVersion = '17.0.0'
        placesVersion = '2.2.0'

        expressoCoreVersion = '3.2.0'
        testRunnerVersion = '1.2.0'
        jUnitVersion = '4.12'
        ktxVersion = '1.1.0'
        metarialsVersion = '1.2.0-alpha01'

        tedPermissionVersion = '2.2.3'

        pagingVersion = '2.1.2'

        libraries = [

                // material design
                material               : "com.google.android.material:material:$metarialsVersion",

                // Android-x library
                preference             : "androidx.preference:preference-ktx:$ktxVersion",
                appcompat              : "androidx.appcompat:appcompat:$ktxVersion",
                coreKTX                : "androidx.core:core-ktx:$ktxVersion",
                constraintLayout       : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",

                // RxJava2
                // https://github.com/ReactiveX/RxAndroid
                // https://github.com/ReactiveX/RxJava
                rxJava2RxAndroid       : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
                rxJava2RxJava          : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",


                // OKHttp3 + Retrofit2
                // https://github.com/square/okhttp
                // https://github.com/square/retrofit
                loggingInterceptor     : "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
                okHttp                 : "com.squareup.okhttp3:okhttp:$okhttpVersion",
                retrofit2AdapterRxJava2: "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
                retrofit2ConverterGson : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
                retrofit2              : "com.squareup.retrofit2:retrofit:$retrofitVersion",

                // Glide
                // https://github.com/bumptech/glide
                glide                  : "com.github.bumptech.glide:glide:$glideVersion",

                // Koin - Kotlin Injection
                // https://github.com/InsertKoinIO/koin
                koinScope              : "org.koin:koin-androidx-scope:$koinAndroidVersion",
                koinViewModel          : "org.koin:koin-androidx-viewmodel:$koinAndroidVersion",
                koinFragment           : "org.koin:koin-androidx-fragment:$koinAndroidVersion",

                // Gson
                // https://github.com/google/gson
                gson                   : "com.google.code.gson:gson:$gsonVersion",

                // Secure Preferences
                // https://github.com/scottyab/secure-preferences
                securePreference       : "com.scottyab:secure-preferences-lib:$securePreferenceVersion",

                // Lottie
                // https://github.com/airbnb/lottie-android
                lottie                 : "com.airbnb.android:lottie:$lottieVersion",

                // RxBinding
                // https://github.com/JakeWharton/RxBinding
                rxBinding              : "com.jakewharton.rxbinding3:rxbinding:$rxBindingVersion",

                // google Map
                // https://developers.google.com/maps/documentation/android-sdk/intro?hl=ko
                googleMap              : "com.google.android.gms:play-services-maps:$googleMapVersion",

                // https://developers.google.com/places/android-sdk/intro
                // fuseLocationProvider 사용
                places                 : "com.google.android.libraries.places:places:$placesVersion",

                // TedPermission
                // https://github.com/ParkSangGwon/TedPermission
                tedPermission          : "gun0912.ted:tedpermission-rx2:$tedPermissionVersion",

                // jetpack paging
                // https://developer.android.com/topic/libraries/architecture/paging?hl=ko
                paging : "android.arch.paging:runtime:$pagingVersion"
        ]

        annotationProcessors = [
                glidCompiler: "com.github.bumptech.glide:compiler:$glideVersion",
        ]

        testImplementations = [
                // Test, Mocking
                koinTest     : "org.koin:koin-test:$koinAndroidVersion",
                jUnit        : "junit:junit:$jUnitVersion",
                mockitoCore  : 'org.mockito:mockito-core:2.28.2',
                mockitoKotlin: 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0',
                mockitoInline: 'org.mockito:mockito-inline:2.13.0',
        ]

        androidTestImplementations = [
                espressoCore  : "androidx.test.espresso:espresso-core:$expressoCoreVersion",
                testRunner    : "androidx.test:runner:$testRunnerVersion",
                testRules     : "androidx.test:rules:$testRunnerVersion",
                androidJUnit  : 'androidx.test.ext:junit:1.1.1',
                mockitoAndroid: 'org.mockito:mockito-android:2.24.5'
        ]

    }

    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.fabric.io/public'
        }
        mavenCentral()

    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}